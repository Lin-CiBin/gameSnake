{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, \"123\");\n}","map":{"version":3,"names":["_createElementBlock"],"sources":["C:\\Users\\LIN\\Desktop\\vueproject\\src\\views\\AboutView.vue"],"sourcesContent":["<template>\n  <div>123</div>\n</template>\n<script setup>\nimport { onMounted, ref } from 'vue'\nconst GRID_SIZE = 20\nconst grid = ref([])\nconst tiles = ref({})\nconst emptyCell = ref({})\nonMounted(() => {\n  initGame()\n  createNewTile()\n})\n\nfunction initGame() {\n  grid.value = Array(GRID_SIZE).fill().map(() => Array(GRID_SIZE).fill(0))\n}\n\nfunction getEmptyCell() {\n  emptyCell.value = grid.value.flatMap((row, rowIndex) => row.map((cell, colIndex) => cell === 0 ? { row: rowIndex, col: colIndex } : null).filter(Boolean))\n}\n\nfunction createNewTile() {\n  getEmptyCell()\n  const { row, col } = emptyCell.value[Math.floor(Math.random() * emptyCell.value.length)]\n  grid.value[row][col] = 1\n  const tile = {\n    id,\n    prevRow: row,\n    prevCol: col,\n    row,\n    col,\n  };\n}\n\n\n</script>"],"mappings":";;uBACEA,mBAAA,CAAc,aAAT,KAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}